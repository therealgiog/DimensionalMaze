/*
mazeDemoLevel.JS contains the main logic for a maze level in the game.
A LayerMask is needed to create a "hole" in the first background image so the second background image can be seen.
This script is used for the rip & portal.
The "rip" is the object that dictates where the portal will be created.
The "portal" is the actual cut/hole visually made in the image as seen by the player.
*/

#pragma strict
var rip : GameObject;
private var ray :Ray;
private var rayCastHit : RaycastHit;
private var defaultRipPosition : Vector3;
private var layerMask : int;
var background : GameObject;

function Awake()
{
	defaultRipPosition = rip.transform.position;
	layerMask = LayerMask.GetMask("Background");
}

function Start ()
{

}

function Update ()
{
	if (Input.GetMouseButton(0))
	{
		ray = Camera.main.ScreenPointToRay(Input.mousePosition);
		//Be careful because right now, Raycast can only hit background layer
		if (Physics.Raycast(ray,rayCastHit, Mathf.Infinity, layerMask))
		{
			//var ripPosition : Vector3 = Camera.main.ScreenToWorldPoint(Vector3(Input.mousePosition.x,Input.mousePosition.y, 10));
			rip.transform.position = Camera.main.ScreenToWorldPoint(Vector3(Input.mousePosition.x,Input.mousePosition.y, 10));
			//if (Physics.Raycast (transform.position, Vector3.forward, Mathf.Infinity, layerMask))
			//{
      //	Debug.Log("hitbackground");
    	//}
			
			background.SendMessage("OpenPortal");
		}
	}
	else if (Input.GetMouseButtonUp(0))
	{
		rip.transform.position = defaultRipPosition;
		background.SendMessage("ClosePortal");
	}
	else
	{
		rip.transform.position = defaultRipPosition;
		background.SendMessage("ClosePortal");
	}
}
